// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: intento/intent/v1beta1/trustless_execution_agent.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TrustlessExecutionAgent struct {
	AgentAddress string                            `protobuf:"bytes,1,opt,name=agent_address,json=agentAddress,proto3" json:"agent_address,omitempty"`
	ICAConfig    *ICAConfig                        `protobuf:"bytes,2,opt,name=ica_config,json=icaConfig,proto3" json:"ica_config,omitempty"`
	FeeConfig    *TrustlessExecutionAgentFeeConfig `protobuf:"bytes,3,opt,name=fee_config,json=feeConfig,proto3" json:"fee_config,omitempty"`
}

func (m *TrustlessExecutionAgent) Reset()         { *m = TrustlessExecutionAgent{} }
func (m *TrustlessExecutionAgent) String() string { return proto.CompactTextString(m) }
func (*TrustlessExecutionAgent) ProtoMessage()    {}
func (*TrustlessExecutionAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2cbda1ca0cab9ee, []int{0}
}
func (m *TrustlessExecutionAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TrustlessExecutionAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TrustlessExecutionAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TrustlessExecutionAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustlessExecutionAgent.Merge(m, src)
}
func (m *TrustlessExecutionAgent) XXX_Size() int {
	return m.Size()
}
func (m *TrustlessExecutionAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustlessExecutionAgent.DiscardUnknown(m)
}

var xxx_messageInfo_TrustlessExecutionAgent proto.InternalMessageInfo

type TrustlessExecutionAgentFeeConfig struct {
	FeeAdmin          string                                   `protobuf:"bytes,1,opt,name=fee_admin,json=feeAdmin,proto3" json:"fee_admin,omitempty"`
	FeeCoinsSupported github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=fee_coins_supported,json=feeCoinsSupported,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"fee_coins_supported"`
}

func (m *TrustlessExecutionAgentFeeConfig) Reset()         { *m = TrustlessExecutionAgentFeeConfig{} }
func (m *TrustlessExecutionAgentFeeConfig) String() string { return proto.CompactTextString(m) }
func (*TrustlessExecutionAgentFeeConfig) ProtoMessage()    {}
func (*TrustlessExecutionAgentFeeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2cbda1ca0cab9ee, []int{1}
}
func (m *TrustlessExecutionAgentFeeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TrustlessExecutionAgentFeeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TrustlessExecutionAgentFeeConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TrustlessExecutionAgentFeeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustlessExecutionAgentFeeConfig.Merge(m, src)
}
func (m *TrustlessExecutionAgentFeeConfig) XXX_Size() int {
	return m.Size()
}
func (m *TrustlessExecutionAgentFeeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustlessExecutionAgentFeeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TrustlessExecutionAgentFeeConfig proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TrustlessExecutionAgent)(nil), "intento.intent.v1beta1.TrustlessExecutionAgent")
	proto.RegisterType((*TrustlessExecutionAgentFeeConfig)(nil), "intento.intent.v1beta1.TrustlessExecutionAgentFeeConfig")
}

func init() {
	proto.RegisterFile("intento/intent/v1beta1/trustless_execution_agent.proto", fileDescriptor_a2cbda1ca0cab9ee)
}

var fileDescriptor_a2cbda1ca0cab9ee = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x8a, 0xd4, 0x40,
	0x10, 0xc6, 0xd3, 0xbb, 0x20, 0x4e, 0xaf, 0x7b, 0x30, 0x8a, 0xce, 0xae, 0xd0, 0x33, 0xbb, 0x5e,
	0x06, 0xc1, 0xc4, 0x5d, 0x41, 0xbc, 0x66, 0x06, 0x05, 0x41, 0x10, 0x46, 0x41, 0xf0, 0x12, 0x3a,
	0x49, 0x25, 0x36, 0xce, 0x74, 0x87, 0x54, 0x47, 0x57, 0x7c, 0x09, 0x1f, 0x43, 0x7c, 0x06, 0x1f,
	0x60, 0x8e, 0x7b, 0xf4, 0x34, 0x6a, 0xe6, 0xe2, 0x63, 0x48, 0xfa, 0xcf, 0xe0, 0xc1, 0xc1, 0x53,
	0x57, 0x75, 0x7d, 0xf5, 0xd5, 0xaf, 0xa9, 0xa6, 0x8f, 0x84, 0xd4, 0x20, 0xb5, 0x8a, 0xed, 0x19,
	0xbf, 0x3f, 0xcb, 0x40, 0xf3, 0xb3, 0x58, 0x37, 0x2d, 0xea, 0x05, 0x20, 0xa6, 0x70, 0x01, 0x79,
	0xab, 0x85, 0x92, 0x29, 0xaf, 0x40, 0xea, 0xa8, 0x6e, 0x94, 0x56, 0xe1, 0x2d, 0xd7, 0x17, 0xd9,
	0x33, 0x72, 0x7d, 0xc7, 0x37, 0x2b, 0x55, 0x29, 0x23, 0x89, 0xfb, 0xc8, 0xaa, 0x8f, 0x8f, 0x72,
	0x85, 0x4b, 0x85, 0xa9, 0x2d, 0xd8, 0xc4, 0x95, 0x98, 0xcd, 0xe2, 0x8c, 0x23, 0x6c, 0xa7, 0xe7,
	0x4a, 0x48, 0x57, 0x3f, 0xd9, 0x01, 0x58, 0x2e, 0xd4, 0x07, 0x2b, 0x39, 0xfd, 0x4d, 0xe8, 0xed,
	0x57, 0x9e, 0xf7, 0x89, 0xc7, 0x4d, 0x7a, 0xda, 0xf0, 0x2e, 0x3d, 0x34, 0xd8, 0x29, 0x2f, 0x8a,
	0x06, 0x10, 0x87, 0x64, 0x4c, 0x26, 0x83, 0xf9, 0x35, 0x73, 0x99, 0xd8, 0xbb, 0xf0, 0x05, 0xa5,
	0x22, 0xe7, 0x69, 0xae, 0x64, 0x29, 0xaa, 0xe1, 0xde, 0x98, 0x4c, 0x0e, 0xce, 0x4f, 0xa2, 0x7f,
	0xbf, 0x30, 0x7a, 0x36, 0x4b, 0x66, 0x46, 0x38, 0x3d, 0xec, 0xd6, 0xa3, 0xc1, 0x36, 0x9d, 0x0f,
	0x44, 0xce, 0x6d, 0x18, 0xbe, 0xa6, 0xb4, 0x04, 0xf0, 0x86, 0xfb, 0xc6, 0xf0, 0xf1, 0x2e, 0xc3,
	0x1d, 0xe8, 0x4f, 0x01, 0xbc, 0x71, 0xe9, 0xc3, 0xd3, 0x6f, 0x84, 0x8e, 0xff, 0xa7, 0x0f, 0xef,
	0xd0, 0xbe, 0x23, 0xe5, 0xc5, 0x52, 0x48, 0xf7, 0xde, 0xab, 0x25, 0x40, 0xd2, 0xe7, 0xe1, 0x27,
	0x7a, 0xc3, 0xa2, 0x09, 0x89, 0x29, 0xb6, 0x75, 0xad, 0x1a, 0x0d, 0xc5, 0x70, 0x6f, 0xbc, 0x3f,
	0x39, 0x38, 0x3f, 0x8a, 0xdc, 0x6e, 0xfa, 0x6d, 0x6c, 0x01, 0x67, 0x4a, 0xc8, 0xe9, 0x83, 0xd5,
	0x7a, 0x14, 0x7c, 0xfd, 0x31, 0x9a, 0x54, 0x42, 0xbf, 0x6d, 0xb3, 0x28, 0x57, 0x4b, 0xb7, 0x48,
	0x77, 0xdc, 0xc7, 0xe2, 0x5d, 0xac, 0x3f, 0xd6, 0x80, 0xa6, 0x01, 0xe7, 0xd7, 0x0d, 0xb6, 0x90,
	0xf8, 0xd2, 0x4f, 0x99, 0x3e, 0x5f, 0xfd, 0x62, 0xc1, 0x97, 0x8e, 0x91, 0x55, 0xc7, 0xc8, 0x65,
	0xc7, 0xc8, 0xcf, 0x8e, 0x91, 0xcf, 0x1b, 0x16, 0x5c, 0x6e, 0x58, 0xf0, 0x7d, 0xc3, 0x82, 0x37,
	0xf7, 0xfe, 0xb2, 0xd7, 0x0d, 0xea, 0x05, 0xcf, 0x30, 0xf6, 0x5f, 0xe0, 0xc2, 0x7f, 0x02, 0x33,
	0x26, 0xbb, 0x62, 0xd6, 0xff, 0xf0, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xc9, 0x91, 0x43,
	0xc4, 0x02, 0x00, 0x00,
}

func (this *TrustlessExecutionAgent) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TrustlessExecutionAgent)
	if !ok {
		that2, ok := that.(TrustlessExecutionAgent)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AgentAddress != that1.AgentAddress {
		return false
	}
	if !this.ICAConfig.Equal(that1.ICAConfig) {
		return false
	}
	if !this.FeeConfig.Equal(that1.FeeConfig) {
		return false
	}
	return true
}
func (this *TrustlessExecutionAgentFeeConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TrustlessExecutionAgentFeeConfig)
	if !ok {
		that2, ok := that.(TrustlessExecutionAgentFeeConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FeeAdmin != that1.FeeAdmin {
		return false
	}
	if len(this.FeeCoinsSupported) != len(that1.FeeCoinsSupported) {
		return false
	}
	for i := range this.FeeCoinsSupported {
		if !this.FeeCoinsSupported[i].Equal(&that1.FeeCoinsSupported[i]) {
			return false
		}
	}
	return true
}
func (m *TrustlessExecutionAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TrustlessExecutionAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TrustlessExecutionAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FeeConfig != nil {
		{
			size, err := m.FeeConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTrustlessExecutionAgent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ICAConfig != nil {
		{
			size, err := m.ICAConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTrustlessExecutionAgent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.AgentAddress) > 0 {
		i -= len(m.AgentAddress)
		copy(dAtA[i:], m.AgentAddress)
		i = encodeVarintTrustlessExecutionAgent(dAtA, i, uint64(len(m.AgentAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TrustlessExecutionAgentFeeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TrustlessExecutionAgentFeeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TrustlessExecutionAgentFeeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeeCoinsSupported) > 0 {
		for iNdEx := len(m.FeeCoinsSupported) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FeeCoinsSupported[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTrustlessExecutionAgent(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.FeeAdmin) > 0 {
		i -= len(m.FeeAdmin)
		copy(dAtA[i:], m.FeeAdmin)
		i = encodeVarintTrustlessExecutionAgent(dAtA, i, uint64(len(m.FeeAdmin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTrustlessExecutionAgent(dAtA []byte, offset int, v uint64) int {
	offset -= sovTrustlessExecutionAgent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TrustlessExecutionAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgentAddress)
	if l > 0 {
		n += 1 + l + sovTrustlessExecutionAgent(uint64(l))
	}
	if m.ICAConfig != nil {
		l = m.ICAConfig.Size()
		n += 1 + l + sovTrustlessExecutionAgent(uint64(l))
	}
	if m.FeeConfig != nil {
		l = m.FeeConfig.Size()
		n += 1 + l + sovTrustlessExecutionAgent(uint64(l))
	}
	return n
}

func (m *TrustlessExecutionAgentFeeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FeeAdmin)
	if l > 0 {
		n += 1 + l + sovTrustlessExecutionAgent(uint64(l))
	}
	if len(m.FeeCoinsSupported) > 0 {
		for _, e := range m.FeeCoinsSupported {
			l = e.Size()
			n += 1 + l + sovTrustlessExecutionAgent(uint64(l))
		}
	}
	return n
}

func sovTrustlessExecutionAgent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTrustlessExecutionAgent(x uint64) (n int) {
	return sovTrustlessExecutionAgent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TrustlessExecutionAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTrustlessExecutionAgent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TrustlessExecutionAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TrustlessExecutionAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ICAConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ICAConfig == nil {
				m.ICAConfig = &ICAConfig{}
			}
			if err := m.ICAConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeeConfig == nil {
				m.FeeConfig = &TrustlessExecutionAgentFeeConfig{}
			}
			if err := m.FeeConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTrustlessExecutionAgent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TrustlessExecutionAgentFeeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTrustlessExecutionAgent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TrustlessExecutionAgentFeeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TrustlessExecutionAgentFeeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAdmin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeeAdmin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeCoinsSupported", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeeCoinsSupported = append(m.FeeCoinsSupported, types.Coin{})
			if err := m.FeeCoinsSupported[len(m.FeeCoinsSupported)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTrustlessExecutionAgent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTrustlessExecutionAgent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTrustlessExecutionAgent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTrustlessExecutionAgent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTrustlessExecutionAgent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTrustlessExecutionAgent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTrustlessExecutionAgent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTrustlessExecutionAgent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTrustlessExecutionAgent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTrustlessExecutionAgent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTrustlessExecutionAgent = fmt.Errorf("proto: unexpected end of group")
)
