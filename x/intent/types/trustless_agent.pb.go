// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: intento/intent/v1/trustless_agent.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TrustlessAgent struct {
	AgentAddress string                   `protobuf:"bytes,1,opt,name=agent_address,json=agentAddress,proto3" json:"agent_address,omitempty"`
	ICAConfig    *ICAConfig               `protobuf:"bytes,2,opt,name=ica_config,json=icaConfig,proto3" json:"ica_config,omitempty"`
	FeeConfig    *TrustlessAgentFeeConfig `protobuf:"bytes,3,opt,name=fee_config,json=feeConfig,proto3" json:"fee_config,omitempty"`
}

func (m *TrustlessAgent) Reset()         { *m = TrustlessAgent{} }
func (m *TrustlessAgent) String() string { return proto.CompactTextString(m) }
func (*TrustlessAgent) ProtoMessage()    {}
func (*TrustlessAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f875ed3a2afbfa0a, []int{0}
}
func (m *TrustlessAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TrustlessAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TrustlessAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TrustlessAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustlessAgent.Merge(m, src)
}
func (m *TrustlessAgent) XXX_Size() int {
	return m.Size()
}
func (m *TrustlessAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustlessAgent.DiscardUnknown(m)
}

var xxx_messageInfo_TrustlessAgent proto.InternalMessageInfo

type TrustlessAgentFeeConfig struct {
	//can set fee coins supported, which can be charged per message executed if a fee limit is set in the flow
	FeeAdmin string `protobuf:"bytes,1,opt,name=fee_admin,json=feeAdmin,proto3" json:"fee_admin,omitempty"`
	//can be empty
	FeeCoinsSupported github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=fee_coins_supported,json=feeCoinsSupported,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"fee_coins_supported"`
}

func (m *TrustlessAgentFeeConfig) Reset()         { *m = TrustlessAgentFeeConfig{} }
func (m *TrustlessAgentFeeConfig) String() string { return proto.CompactTextString(m) }
func (*TrustlessAgentFeeConfig) ProtoMessage()    {}
func (*TrustlessAgentFeeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f875ed3a2afbfa0a, []int{1}
}
func (m *TrustlessAgentFeeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TrustlessAgentFeeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TrustlessAgentFeeConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TrustlessAgentFeeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrustlessAgentFeeConfig.Merge(m, src)
}
func (m *TrustlessAgentFeeConfig) XXX_Size() int {
	return m.Size()
}
func (m *TrustlessAgentFeeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TrustlessAgentFeeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TrustlessAgentFeeConfig proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TrustlessAgent)(nil), "intento.intent.v1.TrustlessAgent")
	proto.RegisterType((*TrustlessAgentFeeConfig)(nil), "intento.intent.v1.TrustlessAgentFeeConfig")
}

func init() {
	proto.RegisterFile("intento/intent/v1/trustless_agent.proto", fileDescriptor_f875ed3a2afbfa0a)
}

var fileDescriptor_f875ed3a2afbfa0a = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x41, 0x8e, 0xd3, 0x30,
	0x14, 0x8d, 0x67, 0x24, 0x44, 0x3d, 0x0c, 0xd2, 0x04, 0x24, 0x3a, 0xc3, 0xc8, 0xad, 0x86, 0x05,
	0xd1, 0x48, 0xd8, 0x64, 0x38, 0x41, 0x5a, 0x09, 0x69, 0x10, 0xab, 0xc2, 0x8a, 0x4d, 0xe4, 0x24,
	0x4e, 0xb0, 0x68, 0xed, 0x28, 0xdf, 0x2d, 0x20, 0x2e, 0xc1, 0x31, 0x10, 0x5b, 0x2e, 0xd1, 0x05,
	0x8b, 0x2e, 0x59, 0x15, 0x48, 0x2f, 0x82, 0x62, 0x3b, 0x08, 0x54, 0x58, 0xfd, 0xff, 0xfd, 0x9e,
	0x9f, 0x9f, 0xff, 0xc3, 0x0f, 0xa5, 0x32, 0x42, 0x19, 0xcd, 0x5c, 0x65, 0xab, 0x98, 0x99, 0x66,
	0x09, 0x66, 0x2e, 0x00, 0x52, 0x5e, 0x09, 0x65, 0x68, 0xdd, 0x68, 0xa3, 0xc3, 0x13, 0x4f, 0xa4,
	0xae, 0xd2, 0x55, 0x7c, 0x76, 0xb7, 0xd2, 0x95, 0xb6, 0x28, 0xeb, 0x3a, 0x47, 0x3c, 0x3b, 0xcd,
	0x35, 0x2c, 0x34, 0xa4, 0x0e, 0x70, 0x83, 0x87, 0x88, 0x9b, 0x58, 0xc6, 0x41, 0xb0, 0x55, 0x9c,
	0x09, 0xc3, 0x63, 0x96, 0x6b, 0xa9, 0x3c, 0x7e, 0xbe, 0x6f, 0xa6, 0x9c, 0xeb, 0xb7, 0x0e, 0xbd,
	0xf8, 0x8a, 0xf0, 0xed, 0x97, 0xbd, 0xb7, 0xa4, 0xb3, 0x16, 0x3e, 0xc0, 0xc7, 0xd6, 0x63, 0xca,
	0x8b, 0xa2, 0x11, 0x00, 0x43, 0x34, 0x46, 0xd1, 0x60, 0x76, 0xcb, 0x1e, 0x26, 0xee, 0x2c, 0x7c,
	0x86, 0xb1, 0xcc, 0x79, 0x9a, 0x6b, 0x55, 0xca, 0x6a, 0x78, 0x30, 0x46, 0xd1, 0xd1, 0xd5, 0x39,
	0xdd, 0xfb, 0x0e, 0xbd, 0x9e, 0x26, 0x53, 0xcb, 0x99, 0x1c, 0xb7, 0xdb, 0xd1, 0xe0, 0xf7, 0x38,
	0x1b, 0xc8, 0x9c, 0xbb, 0x36, 0xbc, 0xc6, 0xb8, 0x14, 0xa2, 0xd7, 0x3a, 0xb4, 0x5a, 0x97, 0xff,
	0xd0, 0xfa, 0xdb, 0xe7, 0x53, 0x21, 0x7a, 0xa9, 0xb2, 0x6f, 0x2f, 0xbe, 0x20, 0x7c, 0xef, 0x3f,
	0xb4, 0xf0, 0x3e, 0xee, 0x88, 0x29, 0x2f, 0x16, 0x52, 0xf9, 0x3f, 0xdd, 0x2c, 0x85, 0x48, 0xba,
	0x39, 0xfc, 0x80, 0xef, 0x38, 0x0f, 0x52, 0x41, 0x0a, 0xcb, 0xba, 0xd6, 0x8d, 0x11, 0xc5, 0xf0,
	0x60, 0x7c, 0x18, 0x1d, 0x5d, 0x9d, 0x52, 0xbf, 0xf1, 0x6e, 0xc7, 0xd4, 0xef, 0x98, 0x4e, 0xb5,
	0x54, 0x93, 0xc7, 0xeb, 0xed, 0x28, 0xf8, 0xfc, 0x7d, 0x14, 0x55, 0xd2, 0xbc, 0x5e, 0x66, 0x34,
	0xd7, 0x0b, 0x1f, 0x8f, 0x2f, 0x8f, 0xa0, 0x78, 0xc3, 0xcc, 0xfb, 0x5a, 0x80, 0xbd, 0x00, 0xb3,
	0x13, 0xeb, 0x56, 0x2a, 0x78, 0xd1, 0xbf, 0x32, 0x79, 0xbe, 0xfe, 0x49, 0x82, 0x4f, 0x2d, 0x41,
	0xeb, 0x96, 0xa0, 0x4d, 0x4b, 0xd0, 0x8f, 0x96, 0xa0, 0x8f, 0x3b, 0x12, 0x6c, 0x76, 0x24, 0xf8,
	0xb6, 0x23, 0xc1, 0xab, 0xcb, 0x3f, 0xe4, 0x4d, 0x03, 0x66, 0xce, 0x33, 0x60, 0x7d, 0xb0, 0xef,
	0xfa, 0x68, 0xed, 0x33, 0xd9, 0x0d, 0x9b, 0xec, 0x93, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1b,
	0xfa, 0x4c, 0xa4, 0x86, 0x02, 0x00, 0x00,
}

func (this *TrustlessAgent) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TrustlessAgent)
	if !ok {
		that2, ok := that.(TrustlessAgent)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AgentAddress != that1.AgentAddress {
		return false
	}
	if !this.ICAConfig.Equal(that1.ICAConfig) {
		return false
	}
	if !this.FeeConfig.Equal(that1.FeeConfig) {
		return false
	}
	return true
}
func (this *TrustlessAgentFeeConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TrustlessAgentFeeConfig)
	if !ok {
		that2, ok := that.(TrustlessAgentFeeConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FeeAdmin != that1.FeeAdmin {
		return false
	}
	if len(this.FeeCoinsSupported) != len(that1.FeeCoinsSupported) {
		return false
	}
	for i := range this.FeeCoinsSupported {
		if !this.FeeCoinsSupported[i].Equal(&that1.FeeCoinsSupported[i]) {
			return false
		}
	}
	return true
}
func (m *TrustlessAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TrustlessAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TrustlessAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FeeConfig != nil {
		{
			size, err := m.FeeConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTrustlessAgent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ICAConfig != nil {
		{
			size, err := m.ICAConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTrustlessAgent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.AgentAddress) > 0 {
		i -= len(m.AgentAddress)
		copy(dAtA[i:], m.AgentAddress)
		i = encodeVarintTrustlessAgent(dAtA, i, uint64(len(m.AgentAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TrustlessAgentFeeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TrustlessAgentFeeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TrustlessAgentFeeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FeeCoinsSupported) > 0 {
		for iNdEx := len(m.FeeCoinsSupported) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FeeCoinsSupported[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTrustlessAgent(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.FeeAdmin) > 0 {
		i -= len(m.FeeAdmin)
		copy(dAtA[i:], m.FeeAdmin)
		i = encodeVarintTrustlessAgent(dAtA, i, uint64(len(m.FeeAdmin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTrustlessAgent(dAtA []byte, offset int, v uint64) int {
	offset -= sovTrustlessAgent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TrustlessAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AgentAddress)
	if l > 0 {
		n += 1 + l + sovTrustlessAgent(uint64(l))
	}
	if m.ICAConfig != nil {
		l = m.ICAConfig.Size()
		n += 1 + l + sovTrustlessAgent(uint64(l))
	}
	if m.FeeConfig != nil {
		l = m.FeeConfig.Size()
		n += 1 + l + sovTrustlessAgent(uint64(l))
	}
	return n
}

func (m *TrustlessAgentFeeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FeeAdmin)
	if l > 0 {
		n += 1 + l + sovTrustlessAgent(uint64(l))
	}
	if len(m.FeeCoinsSupported) > 0 {
		for _, e := range m.FeeCoinsSupported {
			l = e.Size()
			n += 1 + l + sovTrustlessAgent(uint64(l))
		}
	}
	return n
}

func sovTrustlessAgent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTrustlessAgent(x uint64) (n int) {
	return sovTrustlessAgent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TrustlessAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTrustlessAgent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TrustlessAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TrustlessAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AgentAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AgentAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ICAConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ICAConfig == nil {
				m.ICAConfig = &ICAConfig{}
			}
			if err := m.ICAConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FeeConfig == nil {
				m.FeeConfig = &TrustlessAgentFeeConfig{}
			}
			if err := m.FeeConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTrustlessAgent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TrustlessAgentFeeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTrustlessAgent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TrustlessAgentFeeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TrustlessAgentFeeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeAdmin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeeAdmin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeeCoinsSupported", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeeCoinsSupported = append(m.FeeCoinsSupported, types.Coin{})
			if err := m.FeeCoinsSupported[len(m.FeeCoinsSupported)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTrustlessAgent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTrustlessAgent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTrustlessAgent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTrustlessAgent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTrustlessAgent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTrustlessAgent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTrustlessAgent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTrustlessAgent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTrustlessAgent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTrustlessAgent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTrustlessAgent = fmt.Errorf("proto: unexpected end of group")
)
